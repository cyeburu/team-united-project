{"version":3,"file":"index.ie11.development.js","sources":["../src/utils/isHTMLElement.ts","../src/constants.ts","../src/logic/attachEventListeners.ts","../src/utils/isNullOrUndefined.ts","../src/utils/isArray.ts","../src/utils/isObject.ts","../src/utils/isKey.ts","../src/utils/stringToPath.ts","../src/utils/set.ts","../src/logic/transformToNestObject.ts","../src/utils/isUndefined.ts","../src/utils/filterOutFalsy.ts","../src/utils/get.ts","../src/logic/focusOnErrorField.ts","../src/logic/removeAllEventListeners.ts","../src/logic/getRadioValue.ts","../src/logic/getMultipleSelectValue.ts","../src/utils/isRadioInput.ts","../src/utils/isFileInput.ts","../src/utils/isCheckBoxInput.ts","../src/utils/isMultipleSelect.ts","../src/logic/getCheckboxValue.ts","../src/logic/getFieldValue.ts","../src/utils/isDetached.ts","../src/utils/isEmptyObject.ts","../src/utils/isBoolean.ts","../src/utils/unset.ts","../src/logic/findRemovedFieldAndRemoveListener.ts","../src/utils/isString.ts","../src/utils/deepMerge.ts","../src/logic/getFieldsValues.ts","../src/utils/isSameError.ts","../src/logic/shouldRenderBasedOnError.ts","../src/utils/isRegex.ts","../src/logic/getValueAndMessage.ts","../src/utils/isFunction.ts","../src/utils/isMessage.ts","../src/logic/getValidateError.ts","../src/logic/appendErrors.ts","../src/logic/validateField.ts","../src/utils/isPrimitive.ts","../src/utils/getPath.ts","../src/logic/assignWatchFields.ts","../src/logic/skipValidation.ts","../src/logic/getFieldArrayParentName.ts","../src/logic/deepEqual.ts","../src/logic/isNameInFieldArray.ts","../src/utils/isSelectInput.ts","../src/utils/onDomRemove.ts","../src/utils/validationModeChecker.ts","../src/utils/isRadioOrCheckbox.ts","../src/useForm.ts","../src/useFormContext.tsx","../src/logic/generateId.ts","../src/utils/remove.ts","../src/utils/move.ts","../src/utils/swap.ts","../src/utils/prepend.ts","../src/utils/insert.ts","../src/utils/fillEmptyArray.ts","../src/utils/filterBooleanArray.ts","../src/useFieldArray.ts","../src/useWatch.ts","../src/logic/getInputValue.ts","../src/controller.tsx"],"sourcesContent":["export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types/form';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const VALUE = 'value';\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types/form';\n\nexport default function attachEventListeners(\n  { ref }: Field,\n  shouldAttachChangeEvent: boolean,\n  handleChange?: EventListenerOrEventListenerObject,\n): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","export default <T>(value: unknown): value is T[] => Array.isArray(value);\n","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n","import isArray from './isArray';\n\nexport default (value: [] | string) =>\n  !isArray(value) &&\n  (/^\\w*$/.test(value) ||\n    !/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/.test(value));\n","export default (input: string): (string | number)[] => {\n  const result: (string | number)[] = [];\n\n  input.replace(\n    /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n    (\n      match: string,\n      mathNumber: string,\n      mathQuote: string,\n      originalString: string,\n    ): any => {\n      result.push(\n        mathQuote\n          ? originalString.replace(/\\\\(\\\\)?/g, '$1')\n          : mathNumber || match,\n      );\n    },\n  );\n\n  return result;\n};\n","import isObject from './isObject';\nimport isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types/form';\n\nexport default function set(object: FieldValues, path: string, value: any) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue: string | object = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types/form';\n\nexport default (data: FieldValues): any =>\n  Object.entries(data).reduce(\n    (previous: FieldValues, [key, value]): FieldValues => {\n      if (!isKey(key)) {\n        set(previous, key, value);\n        return previous;\n      }\n\n      return { ...previous, [key]: value };\n    },\n    {},\n  );\n","export default (val: unknown): val is undefined => val === undefined;\n","export default (value: any[]) => value.filter(Boolean);\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport filterOutFalsy from './filterOutFalsy';\n\nexport default (obj: any, path: string, defaultValue?: any) => {\n  const result = filterOutFalsy(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport { FieldErrors, FieldRefs } from '../types/form';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus) {\n          field.ref.focus();\n\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types/form';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import isArray from '../utils/isArray';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: '',\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport get from '../utils/get';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types/form';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value, disabled },\n      ref,\n    } = field;\n\n    if (disabled) {\n      return;\n    }\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return value;\n  }\n\n  if (unmountFieldsStateRef) {\n    return get(unmountFieldsStateRef.current, name);\n  }\n}\n","import { Ref } from '../types/form';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types/utils';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport isBoolean from './isBoolean';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const path = updatePath.slice(0, -1);\n  const length = path.length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef = undefined;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef = undefined;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport set from '../utils/set';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport isArray from '../utils/isArray';\nimport unset from '../utils/unset';\nimport filterOutFalsy from '../utils/filterOutFalsy';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types/form';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name, type },\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n\n    if (!isUndefined(value)) {\n      set(unmountFieldsStateRef.current, name, value);\n    }\n  }\n\n  if (!type) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldRef) {\n    const { options } = fieldRef;\n\n    if (isArray(options) && options.length) {\n      filterOutFalsy(options).forEach((option, index): void => {\n        const { ref } = option;\n        if ((ref && isDetached(ref) && isSameRef(option, ref)) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n          unset(options, `[${index}]`);\n        }\n      });\n\n      if (options && !filterOutFalsy(options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    delete fieldsRef.current[name];\n  }\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import isObject from './isObject';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>\n>(target: T, source: U): T & U {\n  if (!isObject(target) || !isObject(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = deepMerge(targetValue, sourceValue);\n    } else {\n      try {\n        target[key] = sourceValue;\n      } catch {}\n    }\n  }\n\n  return target;\n}\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport isArray from '../utils/isArray';\nimport { deepMerge } from '../utils/deepMerge';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types/form';\nimport transformToNestObject from './transformToNestObject';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n\n  for (const name in fieldsRef.current) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n      );\n    }\n  }\n\n  return deepMerge(\n    { ...((unmountFieldsStateRef || {}).current || {}) },\n    transformToNestObject(output),\n  );\n};\n","import isObject from './isObject';\nimport { FieldError } from '../types/form';\n\nexport default (\n  error: FieldError | undefined,\n  { type, types = {}, message }: FieldError,\n): boolean =>\n  isObject(error) &&\n  error.type === type &&\n  error.message === message &&\n  Object.keys(error.types || {}).length === Object.keys(types).length &&\n  Object.entries(error.types || {}).every(\n    ([key, value]) => types[key] === value,\n  );\n","import isEmptyObject from '../utils/isEmptyObject';\nimport isSameError from '../utils/isSameError';\nimport get from '../utils/get';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FlatFieldErrors,\n  FieldNames,\n} from '../types/form';\n\nexport default function shouldRenderBasedOnError<\n  TFieldValues extends FieldValues\n>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FlatFieldErrors<TFieldValues>;\n  name: InternalFieldName<TFieldValues>;\n  validFields: FieldNames<TFieldValues>;\n  fieldsWithValidation: FieldNames<TFieldValues>;\n}): boolean {\n  const isFieldValid = isEmptyObject(error);\n  const isFormValid = isEmptyObject(errors);\n  const currentFieldError = get(error, name);\n  const existFieldError = get(errors, name);\n\n  if (isFieldValid && get(validFields, name)) {\n    return false;\n  }\n\n  if (\n    isFormValid !== isFieldValid ||\n    (!isFormValid && !existFieldError) ||\n    (isFieldValid && get(fieldsWithValidation, name) && !get(validFields, name))\n  ) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError);\n}\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule, ValidationValueMessage } from '../types/form';\n\nconst isValueMessage = (\n  value?: ValidationRule,\n): value is ValidationValueMessage => isObject(value) && !isRegex(value);\n\nexport default (validationData?: ValidationRule) =>\n  isValueMessage(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import { isValidElement } from 'react';\nimport isString from '../utils/isString';\nimport isObject from '../utils/isObject';\nimport { Message } from '../types/form';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || (isObject(value) && isValidElement(value));\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types/form';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: FlatFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) => {\n  if (validateAllFieldCriteria) {\n    const error = errors[name];\n\n    return {\n      ...error,\n      types: {\n        ...(error && error.types ? error.types : {}),\n        [type]: message || true,\n      },\n    };\n  }\n\n  return {};\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { type, value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<FlatFieldErrors<TFieldValues>> => {\n  const fields = fieldsRef.current;\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: FlatFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value: requiredValue, message: requiredMessage } = isMessage(\n      required,\n    )\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (requiredValue) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message: requiredMessage,\n        ref: isRadioOrCheckbox\n          ? ((fields[name] as Field).options || [])[0].ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\n    let exceedMax;\n    let exceedMin;\n    const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\n    const { value: minValue, message: minMessage } = getValueAndMessage(min);\n\n    if (type === 'number' || (!type && !isNaN(value))) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxValue)) {\n        exceedMax = valueNumber > maxValue;\n      }\n      if (!isNullOrUndefined(minValue)) {\n        exceedMin = valueNumber < minValue;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxValue)) {\n        exceedMax = valueDate > new Date(maxValue);\n      }\n      if (isString(minValue)) {\n        exceedMin = valueDate < new Date(minValue);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxMessage,\n        minMessage,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const {\n      value: maxLengthValue,\n      message: maxLengthMessage,\n    } = getValueAndMessage(maxLength);\n    const {\n      value: minLengthValue,\n      message: minLengthMessage,\n    } = getValueAndMessage(minLength);\n    const inputLength = value.toString().length;\n    const exceedMax =\n      !isNullOrUndefined(maxLengthValue) && inputLength > maxLengthValue;\n    const exceedMin =\n      !isNullOrUndefined(minLengthValue) && inputLength < minLengthValue;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty) {\n    const { value: patternValue, message: patternMessage } = getValueAndMessage(\n      pattern,\n    );\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message: patternMessage,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(fieldsRef, name, unmountFieldsStateRef);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types/utils';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isPrimitive from './isPrimitive';\nimport isObject from './isObject';\nimport { FieldValues, InternalFieldName } from '../types/form';\n\nexport const getPath = <TFieldValues extends FieldValues = FieldValues>(\n  path: InternalFieldName<TFieldValues>,\n  values: TFieldValues | any[],\n): any[] => {\n  const getInnerPath = (\n    value: any,\n    key: number | string,\n    isObject?: boolean,\n  ) => {\n    const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return Object.entries(values)\n    .map(([key, value]) => getInnerPath(value, key, isObject(values)))\n    .flat(Infinity);\n};\n","import get from '../utils/get';\nimport { getPath } from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\nimport { DeepPartial } from '../types/utils';\nimport {\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types/form';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value;\n\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = undefined;\n  } else {\n    value = get(fieldValues, fieldName);\n\n    if (isObject(value) || isArray(value)) {\n      getPath<TFieldValues>(\n        fieldName,\n        value as TFieldValues,\n      ).forEach((name: string) => watchFields.add(name));\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isOnTouch,\n  isTouched,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n  isOnTouch?: boolean;\n  isTouched?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\n\nexport default function deepEqual(object1: any = [], object2: any = []) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n    const val2 = object2[key];\n\n    if (\n      (isObject(val1) || isArray(val1)) && (isObject(val2) || isArray(val2))\n        ? !deepEqual(val1, val2)\n        : val1 !== val2\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import { FieldValues, InternalFieldName } from '../types/form';\n\nexport const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}[\\\\d+]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (\n  names: Set<InternalFieldName<FieldValues>>,\n  name: InternalFieldName<FieldValues>,\n) => [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import * as React from 'react';\nimport { Field, FieldRefs } from '../types/form';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove<TFieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  removeFieldEventListenerAndRef: (\n    field: Field | undefined,\n    forceDelete?: boolean,\n  ) => void,\n): MutationObserver {\n  const observer = new MutationObserver((): void => {\n    for (const field of Object.values(fieldsRef.current)) {\n      if (field && field.options) {\n        for (const { ref } of field.options) {\n          if (isDetached(ref)) {\n            removeFieldEventListenerAndRef(field);\n          }\n        }\n      } else if (field && isDetached(field.ref)) {\n        removeFieldEventListenerAndRef(field);\n      }\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types/form';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types/form';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport shouldRenderBasedOnError from './logic/shouldRenderBasedOnError';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport deepEqual from './logic/deepEqual';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport onDomRemove from './utils/onDomRemove';\nimport isObject from './utils/isObject';\nimport { getPath } from './utils/getPath';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isSameError from './utils/isSameError';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport filterOutFalsy from './utils/filterOutFalsy';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldValue,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  ValidationRules,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  FieldError,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  DefaultValuesAtRender,\n  FlatFieldErrors,\n  NestedValue,\n  SetValueConfig,\n  ErrorOption,\n  FormState,\n  SubmitErrorHandler,\n  FieldNames,\n} from './types/form';\nimport { LiteralToPrimitive, DeepPartial, NonUndefined } from './types/utils';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isWeb =\n  typeof document !== UNDEFINED &&\n  !isWindowUndefined &&\n  !isUndefined(window.HTMLElement);\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as UnpackNestedValue<DeepPartial<TFieldValues>>,\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const fieldArrayDefaultValues = React.useRef<\n    Record<InternalFieldName<FieldValues>, unknown[]>\n  >({});\n  const watchFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const watchFieldsHookRef = React.useRef<\n    Record<InternalFieldName<FieldValues>, Set<InternalFieldName<TFieldValues>>>\n  >({});\n  const watchFieldsHookRenderRef = React.useRef<\n    Record<InternalFieldName<FieldValues>, Function>\n  >({});\n  const fieldsWithValidationRef = React.useRef({});\n  const validFieldsRef = React.useRef({});\n  const defaultValuesRef = React.useRef<\n    | FieldValue<UnpackNestedValue<TFieldValues>>\n    | UnpackNestedValue<DeepPartial<TFieldValues>>\n  >(defaultValues);\n  const defaultValuesAtRenderRef = React.useRef(\n    {} as DefaultValuesAtRender<TFieldValues>,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const unmountFieldsStateRef = React.useRef<\n    Record<InternalFieldName<FieldValues>, unknown>\n  >({});\n  const resetFieldArrayFunctionRef = React.useRef<\n    Record<InternalFieldName<FieldValues>, () => void>\n  >({});\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<Set<InternalFieldName<FieldValues>>>(\n    new Set(),\n  );\n  const modeRef = React.useRef(modeChecker(mode));\n  const {\n    current: { isOnSubmit, isOnTouch },\n  } = modeRef;\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const [formState, setFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touched: {},\n    isSubmitting: false,\n    isValid: !isOnSubmit,\n    errors: {},\n  });\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled || isOnTouch,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n    errors: !isProxyEnabled,\n  });\n  const formStateRef = React.useRef(formState);\n  const observerRef = React.useRef<MutationObserver | undefined>();\n  const {\n    current: { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange },\n  } = React.useRef(modeChecker(reValidateMode));\n\n  contextRef.current = context;\n  resolverRef.current = resolver;\n  formStateRef.current = formState;\n\n  const updateFormState = React.useCallback(\n    (state: Partial<FormState<TFieldValues>> = {}) =>\n      !isUnMount.current &&\n      setFormState({\n        ...formStateRef.current,\n        ...state,\n      }),\n    [],\n  );\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FlatFieldErrors<TFieldValues>,\n      shouldRender = false,\n      state: {\n        dirtyFields?: FieldNames<TFieldValues>;\n        isDirty?: boolean;\n        touched?: FieldNames<TFieldValues>;\n      } = {},\n      isValid?: boolean,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        shouldRenderBasedOnError<TFieldValues>({\n          errors: formStateRef.current.errors,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(formStateRef.current.errors, name);\n\n      if (isEmptyObject(error)) {\n        if (get(fieldsWithValidationRef.current, name) || resolverRef.current) {\n          set(validFieldsRef.current, name, true);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        unset(formStateRef.current.errors, name);\n      } else {\n        unset(validFieldsRef.current, name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !isSameError(previousError, error[name] as FieldError);\n\n        set(formStateRef.current.errors, name, error[name]);\n      }\n\n      if (shouldReRender || !isEmptyObject(state)) {\n        updateFormState({\n          ...state,\n          errors: formStateRef.current.errors,\n          ...(resolverRef.current ? { isValid: !!isValid } : {}),\n        });\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      { ref, options }: Field,\n      rawValue:\n        | FieldValue<TFieldValues>\n        | UnpackNestedValue<DeepPartial<TFieldValues>>\n        | undefined\n        | null\n        | boolean,\n    ) => {\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref) && options) {\n        options.forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string).includes(selectRef.value)),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = String(\n                  value as string | boolean,\n                ).includes(checkboxRef.value)),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const updateAndGetDirtyState = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      shouldRender = true,\n    ): {\n      dirtyFields?: FieldNames<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNames<TFieldValues>;\n    } => {\n      if (\n        !fieldsRef.current[name] ||\n        (!readFormStateRef.current.isDirty &&\n          !readFormStateRef.current.dirtyFields)\n      ) {\n        return {};\n      }\n\n      const isFieldDirty =\n        defaultValuesAtRenderRef.current[name] !==\n        getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      const isDirtyFieldExist = get(formStateRef.current.dirtyFields, name);\n      const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n      const previousIsDirty = formStateRef.current.isDirty;\n\n      isFieldDirty\n        ? set(formStateRef.current.dirtyFields, name, true)\n        : unset(formStateRef.current.dirtyFields, name);\n\n      const state = {\n        isDirty:\n          (isFieldArray &&\n            !deepEqual(\n              get(getValues(), getFieldArrayParentName(name)),\n              get(defaultValuesRef.current, getFieldArrayParentName(name)),\n            )) ||\n          !isEmptyObject(formStateRef.current.dirtyFields),\n        dirtyFields: formStateRef.current.dirtyFields,\n      };\n\n      const isChanged =\n        (readFormStateRef.current.isDirty &&\n          previousIsDirty !== state.isDirty) ||\n        (readFormStateRef.current.dirtyFields &&\n          isDirtyFieldExist !== get(formStateRef.current.dirtyFields, name));\n\n      if (isChanged && shouldRender) {\n        updateFormState({\n          ...state,\n        });\n      }\n\n      return isChanged ? state : {};\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean,\n    ): Promise<boolean> => {\n      if (fieldsRef.current[name]) {\n        const error = await validateField<TFieldValues>(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          fieldsRef.current[name] as Field,\n          unmountFieldsStateRef,\n        );\n\n        shouldRenderBaseOnError(name, error, skipReRender);\n\n        return isEmptyObject(error);\n      }\n\n      return false;\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      payload:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues() as TFieldValues,\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = formStateRef.current.isValid;\n\n      if (isArray(payload)) {\n        const isInputsValid = payload\n          .map((name) => {\n            const error = get(errors, name);\n\n            error\n              ? set(formState.errors, name, error)\n              : unset(formState.errors, name);\n\n            return !error;\n          })\n          .every(Boolean);\n\n        updateFormState({\n          isValid: isInputsValid,\n          errors: formState.errors,\n        });\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, payload);\n\n        shouldRenderBaseOnError(\n          payload,\n          (error ? { [payload]: error } : {}) as FlatFieldErrors<TFieldValues>,\n          previousFormIsValid !== isEmptyObject(errors),\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (isArray(fields)) {\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, true)),\n        );\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues>,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      getPath(name, value).forEach((fieldName) => {\n        const data = {};\n        const field = fieldsRef.current[fieldName];\n\n        if (field) {\n          set(data, name, value);\n          setFieldValue(field, get(data, fieldName));\n\n          if (shouldDirty) {\n            updateAndGetDirtyState(fieldName);\n          }\n\n          if (shouldValidate) {\n            trigger(fieldName as FieldName<TFieldValues>);\n          }\n        }\n      });\n    },\n    [trigger, setFieldValue, updateAndGetDirtyState],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues> | null | undefined | boolean,\n      config: SetValueConfig,\n    ) => {\n      if (fieldsRef.current[name]) {\n        setFieldValue(fieldsRef.current[name] as Field, value);\n        config.shouldDirty && updateAndGetDirtyState(name);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n      }\n\n      set(unmountFieldsStateRef.current, name, value);\n    },\n    [updateAndGetDirtyState, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = (name: string) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = (name: string, found = true): boolean => {\n    if (!isEmptyObject(watchFieldsHookRef.current)) {\n      for (const key in watchFieldsHookRef.current) {\n        if (\n          !name ||\n          watchFieldsHookRef.current[key].has(name) ||\n          watchFieldsHookRef.current[key].has(getFieldArrayParentName(name)) ||\n          !watchFieldsHookRef.current[key].size\n        ) {\n          watchFieldsHookRenderRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    value: NonUndefined<TFieldValue> extends NestedValue<infer U>\n      ? U\n      : UnpackNestedValue<DeepPartial<LiteralToPrimitive<TFieldValue>>>,\n    config: SetValueConfig = {},\n  ): void {\n    setInternalValue(name, value as TFieldValues[string], config);\n\n    if (isFieldWatched(name)) {\n      updateFormState();\n    }\n\n    renderWatchedInputs(name);\n\n    if (config.shouldValidate) {\n      trigger(name as any);\n    }\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        const name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error: FlatFieldErrors<TFieldValues>;\n        let isValid;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation = skipValidation({\n            isBlurEvent,\n            isReValidateOnChange,\n            isReValidateOnBlur,\n            isTouched: !!get(formStateRef.current.touched, name),\n            isSubmitted: formStateRef.current.isSubmitted,\n            ...modeRef.current,\n          });\n          let state = updateAndGetDirtyState(name, false);\n          let shouldRender = !isEmptyObject(state) || isFieldWatched(name);\n\n          if (\n            isBlurEvent &&\n            !get(formStateRef.current.touched, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(formStateRef.current.touched, name, true);\n            state = {\n              ...state,\n              touched: formStateRef.current.touched,\n            };\n          }\n\n          if (shouldSkipValidation) {\n            renderWatchedInputs(name);\n            return (\n              (!isEmptyObject(state) ||\n                (shouldRender && isEmptyObject(state))) &&\n              updateFormState(state)\n            );\n          }\n\n          if (resolverRef.current) {\n            const { errors } = await resolverRef.current(\n              getValues() as TFieldValues,\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = formStateRef.current.isValid;\n\n            error = (get(errors, name)\n              ? { [name]: get(errors, name) }\n              : {}) as FlatFieldErrors<TFieldValues>;\n\n            isValid = isEmptyObject(errors);\n\n            if (previousFormIsValid !== isValid) {\n              shouldRender = true;\n            }\n          } else {\n            error = await validateField<TFieldValues>(\n              fieldsRef,\n              isValidateAllFieldCriteria,\n              field,\n              unmountFieldsStateRef,\n            );\n          }\n\n          renderWatchedInputs(name);\n          shouldRenderBaseOnError(name, error, shouldRender, state, isValid);\n        }\n      };\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, unmountFieldsStateRef);\n    }\n\n    if (isArray(payload)) {\n      const data = {};\n\n      for (const name of payload) {\n        set(data, name, getFieldValue(fieldsRef, name, unmountFieldsStateRef));\n      }\n\n      return data;\n    }\n\n    return getFieldsValues(fieldsRef, unmountFieldsStateRef);\n  }\n\n  const validateResolver = React.useCallback(\n    async (values = {}) => {\n      const { errors } = await resolverRef.current!(\n        {\n          ...defaultValuesRef.current,\n          ...getValues(),\n          ...values,\n        },\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = formStateRef.current.isValid;\n      const isValid = isEmptyObject(errors);\n\n      if (previousFormIsValid !== isValid) {\n        updateFormState({\n          isValid,\n        });\n      }\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) =>\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        unmountFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      ),\n    [shouldUnregister],\n  );\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field: Field | undefined, forceDelete?: boolean) => {\n      if (field) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister) {\n          unset(validFieldsRef.current, field.ref.name);\n          unset(fieldsWithValidationRef.current, field.ref.name);\n          unset(defaultValuesAtRenderRef.current, field.ref.name);\n          unset(formState.errors, field.ref.name);\n          unset(formStateRef.current.dirtyFields, field.ref.name);\n          unset(formStateRef.current.touched, field.ref.name);\n\n          updateFormState({\n            errors: formState.errors,\n            isDirty: !isEmptyObject(formStateRef.current.dirtyFields),\n            dirtyFields: formStateRef.current.dirtyFields,\n            touched: formStateRef.current.touched,\n          });\n\n          resolverRef.current && validateResolver();\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    name &&\n      (isArray(name) ? name : [name]).forEach((inputName) =>\n        unset(formState.errors, inputName),\n      );\n\n    updateFormState({\n      errors: name ? formState.errors : {},\n    });\n  }\n\n  function setError(name: FieldName<TFieldValues>, error: ErrorOption): void {\n    set(formState.errors, name, {\n      ...error,\n      ref: (fieldsRef.current[name] || {})!.ref,\n    });\n\n    updateFormState({\n      isValid: false,\n      errors: formState.errors,\n    });\n  }\n\n  const watchInternal = React.useCallback(\n    (\n      fieldNames?: string | string[],\n      defaultValue?: unknown,\n      watchId?: string,\n    ) => {\n      const watchFields = watchId\n        ? watchFieldsHookRef.current[watchId]\n        : watchFieldsRef.current;\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n      const fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        unmountFieldsStateRef,\n        fieldNames,\n      );\n\n      if (isString(fieldNames)) {\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(defaultValue)\n            ? get(combinedDefaultValues, fieldNames)\n            : (defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>),\n          true,\n        );\n      }\n\n      if (isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      if (isUndefined(watchId)) {\n        isWatchAllRef.current = true;\n      }\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[],\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    (isArray(name) ? name : [name]).forEach((fieldName) =>\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true),\n    );\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    validateOptions: ValidationRules | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn(\n          '📋 Field is missing `name` attribute',\n          ref,\n          `https://react-hook-form.com/api#useForm`,\n        );\n      }\n\n      if (\n        fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) &&\n        !RegExp(\n          `^${ref.name.split(/\\[\\d+\\]$/)[0]}[\\\\d+]\\.\\\\w+`\n            .replace(/\\[/g, '\\\\[')\n            .replace(/\\]/g, '\\\\]'),\n        ).test(ref.name)\n      ) {\n        return console.warn(\n          '📋 `name` prop should be in object shape: name=\"test[index].name\". https://react-hook-form.com/api#useFieldArray',\n        );\n      }\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...validateOptions,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    const compareRef = (currentRef: Ref) =>\n      isWeb && (!isHTMLElement(ref) || currentRef === ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let isFieldArray;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? isArray(field.options) &&\n          filterOutFalsy(field.options).find((option) => {\n            return value === option.ref.value && compareRef(option.ref);\n          })\n        : compareRef(field.ref))\n    ) {\n      fields[name] = {\n        ...field,\n        ...validateOptions,\n      };\n      return;\n    }\n\n    if (type) {\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...filterOutFalsy((field && field.options) || []),\n              {\n                ref,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...validateOptions,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(unmountFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : unmountFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(field, defaultValue);\n      }\n    }\n\n    if (resolver && !isFieldArray && readFormStateRef.current.isValid) {\n      validateResolver();\n    } else if (!isEmptyObject(validateOptions)) {\n      set(fieldsWithValidationRef.current, name, true);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          unmountFieldsStateRef,\n        ).then((error: FieldErrors) => {\n          const previousFormIsValid = formStateRef.current.isValid;\n\n          isEmptyObject(error)\n            ? set(validFieldsRef.current, name, true)\n            : unset(validFieldsRef.current, name);\n\n          if (previousFormIsValid !== isEmptyObject(error)) {\n            updateFormState();\n          }\n        });\n      }\n    }\n\n    if (\n      !defaultValuesAtRenderRef.current[name] &&\n      !(isFieldArray && isEmptyDefaultValue)\n    ) {\n      const fieldValue = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      defaultValuesAtRenderRef.current[name] = isEmptyDefaultValue\n        ? isObject(fieldValue)\n          ? { ...fieldValue }\n          : fieldValue\n        : defaultValue;\n    }\n\n    if (type) {\n      attachEventListeners(\n        isRadioOrCheckbox && field.options\n          ? field.options[field.options.length - 1]\n          : field,\n        isRadioOrCheckbox || isSelectInput(ref),\n        handleChangeRef.current,\n      );\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    rules?: ValidationRules,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrValidationOptions?:\n      | FieldName<TFieldValues>\n      | ValidationRules\n      | (TFieldElement & Ref)\n      | null,\n    rules?: ValidationRules,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrValidationOptions)) {\n        registerFieldRef({ name: refOrValidationOptions }, rules);\n      } else if (\n        isObject(refOrValidationOptions) &&\n        'name' in refOrValidationOptions\n      ) {\n        registerFieldRef(refOrValidationOptions, rules);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrValidationOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      onValid: SubmitHandler<TSubmitFieldValues>,\n      onInvalid?: SubmitErrorHandler<TFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues: FieldValues = getFieldsValues(\n        fieldsRef,\n        unmountFieldsStateRef,\n      );\n\n      if (readFormStateRef.current.isSubmitting) {\n        updateFormState({\n          isSubmitting: true,\n        });\n      }\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues as TFieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          formState.errors = errors;\n          fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const {\n                ref: { name },\n              } = field;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                unmountFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                unset(validFieldsRef.current, name);\n              } else if (get(fieldsWithValidationRef.current, name)) {\n                unset(formState.errors, name);\n                set(validFieldsRef.current, name, true);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(formState.errors).every((name) =>\n            Object.keys(fieldsRef.current).includes(name),\n          )\n        ) {\n          updateFormState({\n            errors: {},\n          });\n          await onValid(\n            fieldValues as UnpackNestedValue<TSubmitFieldValues>,\n            e,\n          );\n        } else {\n          formState.errors = {\n            ...formState.errors,\n            ...fieldErrors,\n          };\n          if (onInvalid) {\n            await onInvalid(fieldErrors, e);\n          }\n          if (shouldFocusError) {\n            focusOnErrorField(fieldsRef.current, fieldErrors);\n          }\n        }\n      } finally {\n        updateFormState({\n          isSubmitted: true,\n          isSubmitting: false,\n          errors: formState.errors,\n          submitCount: formStateRef.current.submitCount + 1,\n        });\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    if (!isValid) {\n      validFieldsRef.current = new Set();\n      fieldsWithValidationRef.current = new Set();\n    }\n\n    defaultValuesAtRenderRef.current = {} as DefaultValuesAtRender<\n      TFieldValues\n    >;\n    fieldArrayDefaultValues.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n\n    updateFormState({\n      isDirty: isDirty ? formStateRef.current.isDirty : false,\n      isSubmitted: isSubmitted ? formStateRef.current.isSubmitted : false,\n      submitCount: submitCount ? formStateRef.current.submitCount : 0,\n      isValid: isValid ? formStateRef.current.isValid : true,\n      dirtyFields: dirtyFields ? formStateRef.current.dirtyFields : {},\n      touched: touched ? formStateRef.current.touched : {},\n      errors: errors ? formState.errors : {},\n    });\n  };\n\n  const reset = (\n    values?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    fieldsRef.current = {};\n\n    defaultValuesRef.current = values || { ...defaultValuesRef.current };\n\n    if (values) {\n      renderWatchedInputs('');\n    }\n\n    unmountFieldsStateRef.current = shouldUnregister ? {} : values || {};\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    resetRefs(omitResetState);\n  };\n\n  observerRef.current =\n    observerRef.current || !isWeb\n      ? observerRef.current\n      : onDomRemove(fieldsRef, removeFieldEventListenerAndRef);\n\n  React.useEffect(() => {\n    isUnMount.current = false;\n\n    return () => {\n      isUnMount.current = true;\n\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        return;\n      }\n\n      fieldsRef.current &&\n        Object.values(fieldsRef.current).forEach((field) =>\n          removeFieldEventListenerAndRef(field, true),\n        );\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!resolver && readFormStateRef.current.isValid) {\n    formState.isValid =\n      deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) &&\n      isEmptyObject(formState.errors);\n  }\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [setInternalValue, trigger]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n  };\n\n  const control = {\n    removeFieldEventListener,\n    renderWatchedInputs,\n    watchInternal,\n    mode: modeRef.current,\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange,\n    },\n    fieldsRef,\n    isWatchAllRef,\n    watchFieldsRef,\n    resetFieldArrayFunctionRef,\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    fieldArrayDefaultValues,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    readFormStateRef,\n    formStateRef,\n    defaultValuesRef,\n    unmountFieldsStateRef,\n    updateFormState,\n    validateResolver: resolver ? validateResolver : undefined,\n    ...commonProps,\n  };\n\n  return {\n    watch,\n    control,\n    formState: isProxyEnabled\n      ? new Proxy<FormStateProxy<TFieldValues>>(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (\n              process.env.NODE_ENV !== 'production' &&\n              prop === 'isValid' &&\n              isOnSubmit\n            ) {\n              console.warn(\n                '📋 `formState.isValid` is applicable with `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState',\n              );\n            }\n\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: formState.errors,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues } from './types/form';\nimport { FormProviderProps } from './types/props';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","import { UNDEFINED } from '../constants';\n\nexport default () => {\n  const d =\n    typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import isUndefined from './isUndefined';\nimport isArray from './isArray';\nimport filterOutFalsy from './filterOutFalsy';\n\nconst removeAt = <T>(data: T[], index: number): T[] => [\n  ...data.slice(0, index),\n  ...data.slice(index + 1),\n];\n\nfunction removeAtIndexes<T>(data: T[], index: number[]): T[] {\n  let k = -1;\n\n  while (++k < data.length) {\n    if (index.indexOf(k) >= 0) {\n      delete data[k];\n    }\n  }\n\n  return filterOutFalsy(data);\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : isArray(index)\n    ? removeAtIndexes(data, index)\n    : removeAt(data, index);\n","import isUndefined from './isUndefined';\nimport isArray from './isArray';\n\nexport default <T>(data: T[], from: number, to: number): (T | undefined)[] => {\n  if (isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined as any;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  const temp = [data[indexB], data[indexA]];\n  data[indexA] = temp[0];\n  data[indexB] = temp[1];\n};\n","import isArray from './isArray';\n\nexport default function prepend<T>(data: T[]): (T | undefined)[];\nexport default function prepend<T>(data: T[], value: T | T[]): T[];\nexport default function prepend<T>(\n  data: T[],\n  value?: T | T[],\n): (T | undefined)[] {\n  return [...(isArray(value) ? value : [value || undefined]), ...data];\n}\n","import isArray from './isArray';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...(isArray(value) ? value : [value || undefined]),\n    ...data.slice(index),\n  ];\n}\n","import isArray from './isArray';\n\nexport default <T>(value: T | T[]): undefined[] | undefined =>\n  isArray(value) ? Array(value.length).fill(undefined) : undefined;\n","import isArray from './isArray';\nimport isObject from './isObject';\n\nfunction mapValueToBoolean(value: any) {\n  if (isObject(value)) {\n    const object: any = {};\n\n    for (const key in value) {\n      object[key] = true;\n    }\n\n    return [object];\n  }\n\n  return [true];\n}\n\nexport const filterBooleanArray = <T>(value: T): T[] =>\n  isArray(value)\n    ? value.map(mapValueToBoolean).flat()\n    : mapValueToBoolean(value);\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport { isMatchFieldArrayName } from './logic/isNameInFieldArray';\nimport generateId from './logic/generateId';\nimport deepEqual from './logic/deepEqual';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport get from './utils/get';\nimport set from './utils/set';\nimport isUndefined from './utils/isUndefined';\nimport removeArrayAt from './utils/remove';\nimport unset from './utils/unset';\nimport moveArrayAt from './utils/move';\nimport swapArrayAt from './utils/swap';\nimport prependAt from './utils/prepend';\nimport isArray from './utils/isArray';\nimport insertAt from './utils/insert';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport { filterBooleanArray } from './utils/filterBooleanArray';\nimport filterOutFalsy from './utils/filterOutFalsy';\nimport {\n  Field,\n  FieldValues,\n  UseFieldArrayOptions,\n  Control,\n  ArrayField,\n} from './types/form';\n\nconst appendId = <TValue extends object, TKeyName extends string>(\n  value: TValue,\n  keyName: TKeyName,\n): Partial<ArrayField<TValue, TKeyName>> => ({\n  [keyName]: generateId(),\n  ...value,\n});\n\nconst mapIds = <TData extends object, TKeyName extends string>(\n  data: TData | TData[],\n  keyName: TKeyName,\n) => (isArray(data) ? data : []).map((value) => appendId(value, keyName));\n\nexport const useFieldArray = <\n  TFieldArrayValues extends FieldValues = FieldValues,\n  TKeyName extends string = 'id',\n  TControl extends Control = Control\n>({\n  control,\n  name,\n  keyName = 'id' as TKeyName,\n}: UseFieldArrayOptions<TKeyName, TControl>) => {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error(\n        '📋 useFieldArray is missing `control` prop. https://react-hook-form.com/api#useFieldArray',\n      );\n    }\n\n    if (!name) {\n      console.warn(\n        '📋 useFieldArray is missing `name` attribute. https://react-hook-form.com/api#useFieldArray',\n      );\n    }\n  }\n\n  const focusIndexRef = React.useRef(-1);\n  const {\n    isWatchAllRef,\n    resetFieldArrayFunctionRef,\n    fieldArrayNamesRef,\n    fieldsRef,\n    defaultValuesRef,\n    removeFieldEventListener,\n    formStateRef: {\n      current: { dirtyFields, touched, errors },\n    },\n    updateFormState,\n    readFormStateRef,\n    watchFieldsRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayDefaultValues,\n    validateResolver,\n    renderWatchedInputs,\n    getValues,\n  } = control || methods.control;\n\n  const getDefaultValues = () => [\n    ...(get(fieldArrayDefaultValues.current, name) ||\n      get(defaultValuesRef.current, name) ||\n      []),\n  ];\n  const memoizedDefaultValues = React.useRef<Partial<TFieldArrayValues>[]>(\n    getDefaultValues(),\n  );\n  const [fields, setFields] = React.useState<\n    Partial<ArrayField<TFieldArrayValues, TKeyName>>[]\n  >(mapIds(memoizedDefaultValues.current, keyName));\n  const allFields = React.useRef<\n    Partial<ArrayField<TFieldArrayValues, TKeyName>>[]\n  >(fields);\n  const rootParentName = getFieldArrayParentName(name);\n\n  const getCurrentFieldsValues = () =>\n    get(getValues() || {}, name, allFields.current).map(\n      (item: Partial<TFieldArrayValues>, index: number) => ({\n        ...allFields.current[index],\n        ...item,\n      }),\n    );\n\n  allFields.current = fields;\n  fieldArrayNamesRef.current.add(name);\n\n  if (!get(fieldArrayDefaultValues.current, name) && rootParentName) {\n    set(\n      fieldArrayDefaultValues.current,\n      rootParentName,\n      get(defaultValuesRef.current, rootParentName),\n    );\n  }\n\n  const appendValueWithKey = (values: Partial<TFieldArrayValues>[]) =>\n    values.map((value: Partial<TFieldArrayValues>) => appendId(value, keyName));\n\n  const setFieldAndValidState = (\n    fieldsValues: Partial<ArrayField<TFieldArrayValues, TKeyName>>[],\n  ) => {\n    setFields(fieldsValues);\n\n    if (readFormStateRef.current.isValid && validateResolver) {\n      const values = {};\n      set(values, name, fieldsValues);\n      validateResolver(values);\n    }\n  };\n\n  const getIsDirtyState = (\n    flagOrFields?: (Partial<TFieldArrayValues> | undefined)[],\n  ): boolean =>\n    (readFormStateRef.current.isDirty ||\n      readFormStateRef.current.dirtyFields) &&\n    (isUndefined(flagOrFields) ||\n      !deepEqual(\n        flagOrFields.map(({ [keyName]: omitted, ...rest } = {}) => rest),\n        get(defaultValuesRef.current, name),\n      ));\n\n  const resetFields = () => {\n    for (const key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name) && fieldsRef.current[key]) {\n        removeFieldEventListener(fieldsRef.current[key] as Field, true);\n      }\n    }\n  };\n\n  const append = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    setFieldAndValidState([\n      ...allFields.current,\n      ...(isArray(value)\n        ? appendValueWithKey(value)\n        : [appendId(value, keyName)]),\n    ]);\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      set(dirtyFields, name, [\n        ...(get(dirtyFields, name) || fillEmptyArray(fields.slice(0, 1))),\n        ...filterBooleanArray(value),\n      ]);\n      updateFormState({\n        isDirty: true,\n        dirtyFields,\n      });\n    }\n\n    focusIndexRef.current = shouldFocus ? allFields.current.length : -1;\n    renderWatchedInputs(name);\n  };\n\n  const prepend = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    const emptyArray = fillEmptyArray(value);\n\n    setFieldAndValidState(\n      prependAt(\n        getCurrentFieldsValues(),\n        isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)],\n      ),\n    );\n    resetFields();\n\n    if (isArray(get(errors, name))) {\n      set(errors, name, prependAt(get(errors, name), emptyArray));\n    }\n\n    if (readFormStateRef.current.touched && get(touched, name)) {\n      set(touched, name, prependAt(get(touched, name), emptyArray));\n    }\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      set(\n        dirtyFields,\n        name,\n        prependAt(get(dirtyFields, name) || [], filterBooleanArray(value)),\n      );\n    }\n\n    updateFormState({\n      errors,\n      dirtyFields,\n      isDirty: true,\n      touched,\n    });\n\n    renderWatchedInputs(name);\n    focusIndexRef.current = shouldFocus ? 0 : -1;\n  };\n\n  const remove = (index?: number | number[]) => {\n    const fieldValues = getCurrentFieldsValues();\n    setFieldAndValidState(removeArrayAt(fieldValues, index));\n    resetFields();\n\n    if (isArray(get(errors, name))) {\n      set(errors, name, removeArrayAt(get(errors, name), index));\n\n      if (!filterOutFalsy(get(errors, name, [])).length) {\n        unset(errors, name);\n      }\n    }\n\n    if (readFormStateRef.current.touched && get(touched, name)) {\n      set(touched, name, removeArrayAt(get(touched, name), index));\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFields, name)\n    ) {\n      set(dirtyFields, name, removeArrayAt(get(dirtyFields, name), index));\n\n      if (!filterOutFalsy(get(dirtyFields, name, [])).length) {\n        unset(dirtyFields, name);\n      }\n    }\n\n    if (readFormStateRef.current.isValid && !validateResolver) {\n      set(\n        validFieldsRef.current,\n        name,\n        removeArrayAt(get(validFieldsRef.current, name, []), index),\n      );\n      if (!filterOutFalsy(get(validFieldsRef.current, name, [])).length) {\n        unset(validFieldsRef.current, name);\n      }\n\n      set(\n        fieldsWithValidationRef.current,\n        name,\n        removeArrayAt(get(fieldsWithValidationRef.current, name, []), index),\n      );\n      if (\n        !filterOutFalsy(get(fieldsWithValidationRef.current, name, [])).length\n      ) {\n        unset(fieldsWithValidationRef.current, name);\n      }\n    }\n\n    updateFormState({\n      dirtyFields,\n      errors,\n      touched,\n      isDirty: getIsDirtyState(removeArrayAt(fieldValues, index)),\n    });\n\n    renderWatchedInputs(name);\n  };\n\n  const insert = (\n    index: number,\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    const emptyArray = fillEmptyArray(value);\n    const fieldValues = getCurrentFieldsValues();\n\n    setFieldAndValidState(\n      insertAt(\n        fieldValues,\n        index,\n        isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)],\n      ),\n    );\n    resetFields();\n\n    if (isArray(get(errors, name))) {\n      set(errors, name, insertAt(get(errors, name), index, emptyArray));\n    }\n\n    if (readFormStateRef.current.touched && get(touched, name)) {\n      set(touched, name, insertAt(get(touched, name), index, emptyArray));\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFields, name)\n    ) {\n      set(\n        dirtyFields,\n        name,\n        insertAt(get(dirtyFields, name), index, filterBooleanArray(value)),\n      );\n    }\n\n    updateFormState({\n      dirtyFields,\n      errors,\n      touched,\n      isDirty: getIsDirtyState(insertAt(fieldValues, index)),\n    });\n\n    renderWatchedInputs(name);\n\n    focusIndexRef.current = shouldFocus ? index : -1;\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const fieldValues = getCurrentFieldsValues();\n    swapArrayAt(fieldValues, indexA, indexB);\n    resetFields();\n    setFieldAndValidState([...fieldValues]);\n\n    if (isArray(get(errors, name))) {\n      swapArrayAt(get(errors, name), indexA, indexB);\n    }\n\n    if (readFormStateRef.current.touched && get(touched, name)) {\n      swapArrayAt(get(touched, name), indexA, indexB);\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFields, name)\n    ) {\n      swapArrayAt(get(dirtyFields, name), indexA, indexB);\n    }\n\n    updateFormState({\n      dirtyFields,\n      errors,\n      touched,\n      isDirty: getIsDirtyState(fieldValues),\n    });\n    renderWatchedInputs(name);\n  };\n\n  const move = (from: number, to: number) => {\n    const fieldValues = getCurrentFieldsValues();\n    moveArrayAt(fieldValues, from, to);\n    resetFields();\n    setFieldAndValidState([...fieldValues]);\n\n    if (isArray(get(errors, name))) {\n      moveArrayAt(get(errors, name), from, to);\n    }\n\n    if (readFormStateRef.current.touched && get(touched, name)) {\n      moveArrayAt(get(touched, name), from, to);\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFields, name)\n    ) {\n      moveArrayAt(get(dirtyFields, name), from, to);\n    }\n\n    updateFormState({\n      dirtyFields,\n      errors,\n      touched,\n      isDirty: getIsDirtyState(fieldValues),\n    });\n    renderWatchedInputs(name);\n  };\n\n  const reset = () => {\n    resetFields();\n    unset(fieldArrayDefaultValues.current, name);\n    memoizedDefaultValues.current = get(defaultValuesRef.current, name);\n    setFields(mapIds(memoizedDefaultValues.current, keyName));\n  };\n\n  React.useEffect(() => {\n    const defaultValues = get(fieldArrayDefaultValues.current, name);\n\n    if (defaultValues && fields.length < defaultValues.length) {\n      defaultValues.pop();\n      set(fieldArrayDefaultValues.current, name, defaultValues);\n    }\n\n    if (isWatchAllRef.current) {\n      updateFormState();\n    } else if (watchFieldsRef) {\n      let shouldRenderUseWatch = true;\n      for (const watchField of watchFieldsRef.current) {\n        if (watchField.startsWith(name)) {\n          updateFormState();\n          shouldRenderUseWatch = false;\n          break;\n        }\n      }\n\n      shouldRenderUseWatch && renderWatchedInputs(name);\n    }\n\n    if (focusIndexRef.current > -1) {\n      for (const key in fieldsRef.current) {\n        const field = fieldsRef.current[key];\n        if (\n          key.startsWith(`${name}[${focusIndexRef.current}]`) &&\n          field!.ref.focus\n        ) {\n          field!.ref.focus();\n          break;\n        }\n      }\n    }\n\n    focusIndexRef.current = -1;\n  }, [\n    fields,\n    name,\n    fieldArrayDefaultValues,\n    fieldsRef,\n    watchFieldsRef,\n    isWatchAllRef,\n  ]);\n\n  React.useEffect(() => {\n    const resetFunctions = resetFieldArrayFunctionRef.current;\n    resetFunctions[name] = reset;\n\n    return () => {\n      resetFields();\n      delete resetFunctions[name];\n      fieldArrayNamesRef.current.delete(name);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    swap: React.useCallback(swap, [name, errors]),\n    move: React.useCallback(move, [name, errors]),\n    prepend: React.useCallback(prepend, [name, errors]),\n    append: React.useCallback(append, [name, errors]),\n    remove: React.useCallback(remove, [fields, name, errors]),\n    insert: React.useCallback(insert, [name, errors]),\n    fields,\n  };\n};\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport isUndefined from './utils/isUndefined';\nimport isString from './utils/isString';\nimport generateId from './logic/generateId';\nimport get from './utils/get';\nimport isArray from './utils/isArray';\nimport isObject from './utils/isObject';\nimport { DeepPartial } from './types/utils';\nimport {\n  UseWatchOptions,\n  FieldValues,\n  UnpackNestedValue,\n  Control,\n} from './types/form';\n\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  control?: Control;\n}): undefined | UnpackNestedValue<TWatchFieldValue>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  defaultValue: UnpackNestedValue<TWatchFieldValue>;\n  control?: Control;\n}): UnpackNestedValue<TWatchFieldValue>;\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  name: string[];\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValues>({\n  control,\n  name,\n  defaultValue,\n}: UseWatchOptions): TWatchFieldValues {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error(\n        '📋 useWatch is missing `control` prop. https://react-hook-form.com/api#useWatch',\n      );\n    }\n\n    if (name === '') {\n      console.warn(\n        '📋 useWatch is missing `name` attribute. https://react-hook-form.com/api#useWatch',\n      );\n    }\n  }\n\n  const {\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    watchInternal,\n    defaultValuesRef,\n  } = control || methods.control;\n  const [value, setValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? isString(name)\n        ? get(defaultValuesRef.current, name)\n        : isArray(name)\n        ? name.reduce(\n            (previous, inputName) => ({\n              ...previous,\n              [inputName]: get(defaultValuesRef.current, inputName),\n            }),\n            {},\n          )\n        : defaultValuesRef.current\n      : defaultValue,\n  );\n  const idRef = React.useRef<string>();\n  const defaultValueRef = React.useRef(defaultValue);\n\n  const updateWatchValue = React.useCallback(() => {\n    const value = watchInternal(name, defaultValueRef.current, idRef.current);\n    setValue(\n      isObject(value) ? { ...value } : isArray(value) ? [...value] : value,\n    );\n  }, [setValue, watchInternal, defaultValueRef, name, idRef]);\n\n  React.useEffect(() => {\n    const id = (idRef.current = generateId());\n    const watchFieldsHookRender = watchFieldsHookRenderRef.current;\n    const watchFieldsHook = watchFieldsHookRef.current;\n    watchFieldsHook[id] = new Set();\n    watchFieldsHookRender[id] = updateWatchValue;\n    watchInternal(name, defaultValueRef.current, id);\n\n    return () => {\n      delete watchFieldsHook[id];\n      delete watchFieldsHookRender[id];\n    };\n  }, [\n    name,\n    updateWatchValue,\n    watchFieldsHookRenderRef,\n    watchFieldsHookRef,\n    watchInternal,\n    defaultValueRef,\n  ]);\n\n  return (isUndefined(value) ? defaultValue : value) as TWatchFieldValues;\n}\n","import isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\n\nexport default (event: any) =>\n  isPrimitive(event) ||\n  !isObject(event.target) ||\n  (isObject(event.target) && !event.type)\n    ? event\n    : isUndefined(event.target.value)\n    ? event.target.checked\n    : event.target.value;\n","import * as React from 'react';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport getInputValue from './logic/getInputValue';\nimport skipValidation from './logic/skipValidation';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport { useFormContext } from './useFormContext';\nimport { VALUE } from './constants';\nimport { Control } from './types/form';\nimport { ControllerProps } from './types/props';\n\nconst Controller = <\n  TAs extends\n    | React.ReactElement\n    | React.ComponentType<any>\n    | 'input'\n    | 'select'\n    | 'textarea',\n  TControl extends Control = Control\n>({\n  name,\n  rules,\n  as,\n  render,\n  defaultValue,\n  control,\n  onFocus,\n  ...rest\n}: ControllerProps<TAs, TControl>) => {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production' && !control && !methods) {\n    throw new Error(\n      '📋 Controller is missing `control` prop. https://react-hook-form.com/api#Controller',\n    );\n  }\n\n  const {\n    defaultValuesRef,\n    setValue,\n    register,\n    unregister,\n    trigger,\n    mode,\n    reValidateMode: { isReValidateOnBlur, isReValidateOnChange },\n    formStateRef: {\n      current: { isSubmitted, touched },\n    },\n    updateFormState,\n    readFormStateRef,\n    fieldsRef,\n    fieldArrayNamesRef,\n    unmountFieldsStateRef,\n  } = control || methods.control;\n  const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\n  const getInitialValue = () =>\n    !isUndefined(get(unmountFieldsStateRef.current, name)) && isNotFieldArray\n      ? get(unmountFieldsStateRef.current, name)\n      : isUndefined(defaultValue)\n      ? get(defaultValuesRef.current, name)\n      : defaultValue;\n  const [value, setInputStateValue] = React.useState(getInitialValue());\n  const valueRef = React.useRef(value);\n  const onFocusRef = React.useRef(onFocus);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isUndefined(value)) {\n      console.warn(\n        '📋 Controller `defaultValue` or useForm `defaultValues` is missing. https://react-hook-form.com/api#Controller',\n      );\n    }\n\n    if (as && render) {\n      console.warn(\n        '📋 Should use either `as` or `render` prop. https://react-hook-form.com/api#Controller',\n      );\n    }\n\n    if (!isNotFieldArray && isUndefined(defaultValue)) {\n      console.warn(\n        '📋 Controller is missing `defaultValue` prop when using `useFieldArray`. https://react-hook-form.com/api#Controller',\n      );\n    }\n  }\n\n  const shouldValidate = (isBlurEvent?: boolean) =>\n    !skipValidation({\n      isBlurEvent,\n      isReValidateOnBlur,\n      isReValidateOnChange,\n      isSubmitted,\n      ...mode,\n    });\n\n  const commonTask = ([event]: any[]) => {\n    const data = getInputValue(event);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  };\n\n  const registerField = React.useCallback(() => {\n    if (process.env.NODE_ENV !== 'production' && !name) {\n      return console.warn(\n        '📋 Field is missing `name` prop. https://react-hook-form.com/api#Controller',\n      );\n    }\n\n    if (fieldsRef.current[name]) {\n      fieldsRef.current[name] = {\n        ref: fieldsRef.current[name]!.ref,\n        ...rules,\n      };\n    } else {\n      register(\n        Object.defineProperty({ name, focus: onFocusRef.current }, VALUE, {\n          set(data) {\n            setInputStateValue(data);\n            valueRef.current = data;\n          },\n          get() {\n            return valueRef.current;\n          },\n        }),\n        rules,\n      );\n      if (isNotFieldArray && !get(defaultValuesRef.current, name)) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  }, [rules, name, register]);\n\n  React.useEffect(\n    () => () => {\n      !isNameInFieldArray(fieldArrayNamesRef.current, name) && unregister(name);\n    },\n    [unregister, name, fieldArrayNamesRef],\n  );\n\n  React.useEffect(() => {\n    registerField();\n  }, [registerField]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(() => {\n    if (!fieldsRef.current[name]) {\n      registerField();\n      if (isNotFieldArray) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  });\n\n  const onBlur = () => {\n    if (readFormStateRef.current.touched && !get(touched, name)) {\n      set(touched, name, true);\n      updateFormState({\n        touched,\n      });\n    }\n\n    if (shouldValidate(true)) {\n      trigger(name);\n    }\n  };\n\n  const onChange = (...event: any[]) =>\n    setValue(name, commonTask(event), {\n      shouldValidate: shouldValidate(),\n      shouldDirty: true,\n    });\n\n  const props = {\n    ...rest,\n    onChange,\n    onBlur,\n    name,\n    value,\n  };\n\n  return as\n    ? React.isValidElement(as)\n      ? React.cloneElement(as, props)\n      : React.createElement(as as string, props)\n    : render\n    ? render({\n        onChange,\n        onBlur,\n        value,\n        name,\n      })\n    : null;\n};\n\nexport { Controller };\n"],"names":["value","HTMLElement","EVENTS","BLUR","CHANGE","INPUT","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","VALUE","SELECT","UNDEFINED","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","attachEventListeners","_a","shouldAttachChangeEvent","handleChange","ref","isHTMLElement","addEventListener","isObjectType","isNullOrUndefined","isArray","Date","test","input","result","replace","match","mathNumber","mathQuote","originalString","push","set","object","path","index","tempPath","isKey","stringToPath","length","lastIndex","key","newValue","objValue","isObject","isNaN","data","previous","_c","__read","val","undefined","Boolean","obj","defaultValue","filterOutFalsy","split","isUndefined","fields","fieldErrors","get","field","focus","options","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","option","checked","__spread","selected","element","type","defaultResult","validResult","values","attributes","getFieldValue","fieldsRef","name","unmountFieldsStateRef","current","disabled","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","getMultipleSelectValue","isCheckBox","getCheckboxValue","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","baseGet","updatePath","unset","childObject","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isEmptyObject","isBoolean","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","fieldRef","isCheckBoxInput","options_1","removeAllEventListeners","deepMerge","target","source","targetValue","sourceValue","search","output","name_1","isString","transformToNestObject","error","_b","types","message","shouldRenderBasedOnError","errors","validFields","fieldsWithValidation","isFieldValid","isFormValid","currentFieldError","existFieldError","isSameError","RegExp","isValueMessage","isRegex","validationData","isValidElement","getValidateError","isMessage","validateAllFieldCriteria","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","requiredValue","requiredMessage","exceedMin","_d","maxValue","maxMessage","_e","minValue","minMessage","valueNumber","valueAsNumber","valueDate","valueAsDate","_f","maxLengthValue","_g","minLengthValue","inputLength","toString","_h","patternValue","patternMessage","getFieldsValue","validateRef","isFunction","_o","validateError","validationResult","_j","__values","_l","validateFunction","validateResult","getPath","getInnerPath","pathWithIndex","isPrimitive","Infinity","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","substring","deepEqual","object1","object2","keys1","keys2","keys1_1","val1","val2","isMatchFieldArrayName","searchName","names","onDomRemove","removeFieldEventListenerAndRef","observer","MutationObserver","observe","window","document","childList","subtree","mode","isOnSubmit","isWindowUndefined","isWeb","isProxyEnabled","Proxy","useForm","reValidateMode","resolver","context","defaultValues","shouldFocusError","criteriaMode","React.useRef","fieldArrayDefaultValues","watchFieldsRef","watchFieldsHookRef","watchFieldsHookRenderRef","fieldsWithValidationRef","validFieldsRef","defaultValuesRef","defaultValuesAtRenderRef","isUnMount","isWatchAllRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","modeRef","modeChecker","isValidateAllFieldCriteria","React.useState","isDirty","dirtyFields","submitCount","touched","isSubmitting","formState","setFormState","readFormStateRef","formStateRef","observerRef","_k","updateFormState","React.useCallback","state","shouldRenderBaseOnError","shouldRender","shouldReRender","previousError","setFieldValue","rawValue","radioRef","selectRef","checkboxRef","String","updateAndGetDirtyState","isFieldDirty","isDirtyFieldExist","isFieldArray","isNameInFieldArray","previousIsDirty","getValues","getFieldArrayParentName","isChanged","executeValidation","skipReRender","validateField","executeSchemaOrResolverValidation","payload","previousFormIsValid","isInputsValid","trigger","setInternalValues","shouldDirty","shouldValidate","setInternalValue","config","isFieldWatched","has","renderWatchedInputs","found","size","setValue","shouldSkipValidation","skipValidation","payload_1","getFieldsValues","validateResolver","removeFieldEventListener","clearErrors","inputName","setError","watchInternal","fieldNames","watchId","combinedDefaultValues","assignWatchFields","watch","unregister","registerFieldRef","validateOptions","console","warn","fieldRefAndValidationOptions","isRadioOrCheckboxFunction","compareRef","currentRef","isEmptyDefaultValue","isEmptyUnmountFields","then","isSelectInput","register","refOrValidationOptions","rules","handleSubmit","onValid","onInvalid","e","preventDefault","persist","name_2","fieldError","focusOnErrorField","resetRefs","reset","omitResetState","inputRef","closest","resetFieldArray","React.useEffect","disconnect","commonProps","control","prop","FormContext","React.createContext","displayName","useFormContext","React.useContext","FormProvider","children","props","React.createElement","Provider","__assign","d","performance","now","c","r","Math","random","removeAt","removeAtIndexes","from","to","indexA","indexB","temp","prepend","insert","Array","mapValueToBoolean","filterBooleanArray","appendId","keyName","generateId","mapIds","useFieldArray","methods","Error","focusIndexRef","getDefaultValues","memoizedDefaultValues","setFields","allFields","rootParentName","getCurrentFieldsValues","appendValueWithKey","setFieldAndValidState","fieldsValues","getIsDirtyState","flagOrFields","omitted","rest","resetFields","append","shouldFocus","fillEmptyArray","emptyArray","prependAt","remove","removeArrayAt","insertAt","swap","swapArrayAt","move","moveArrayAt","pop","shouldRenderUseWatch","watchField","resetFunctions","delete","useWatch","idRef","defaultValueRef","updateWatchValue","id","watchFieldsHookRender","watchFieldsHook","event","Controller","as","render","onFocus","isNotFieldArray","getInitialValue","setInputStateValue","valueRef","onFocusRef","commonTask","getInputValue","registerField","_i","React.isValidElement","React.cloneElement"],"mappings":"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"}